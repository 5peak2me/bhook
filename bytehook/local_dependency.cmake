# We found that AGP could not generate the correct cmake configuration
# when relying on a prefab package generated by another local project.
# We had to write one ourselves.
#
# Use it like this:
#
# if(DEPENDENCY_ON_LOCAL_LIBRARY)
#     include(${CMAKE_CURRENT_SOURCE_DIR}/../../../../bytehook/local_dependency.cmake)
# else()
#     find_package(bytehook REQUIRED CONFIG)
# endif()
#
# target_link_libraries(myapp bytehook::bytehook)
#

string(TOLOWER ${CMAKE_BUILD_TYPE} BYTEHOOK_BUILD_TYPE_DIRNAME)
if(${BYTEHOOK_BUILD_TYPE_DIRNAME} STREQUAL "relwithdebinfo")
    set(BYTEHOOK_BUILD_TYPE_DIRNAME "release")
endif()

set(BYTEHOOK_BASE ${CMAKE_CURRENT_SOURCE_DIR}/../../../../bytehook)

add_library(bytehook::bytehook SHARED IMPORTED)
set_target_properties(bytehook::bytehook PROPERTIES
        IMPORTED_LOCATION "${BYTEHOOK_BASE}/build/intermediates/cmake/${BYTEHOOK_BUILD_TYPE_DIRNAME}/obj/${ANDROID_ABI}/libbytehook.so"
        INTERFACE_INCLUDE_DIRECTORIES "${BYTEHOOK_BASE}/src/main/cpp/include"
        INTERFACE_LINK_LIBRARIES ""
)
